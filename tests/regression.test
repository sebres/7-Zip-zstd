# regression.test --
#
# Regressions tests for archives compressed with previous version
# Part of 7-zip ZS test suite.
#
# Copyright (c) 2025- by Sergey G. Brester aka sebres

if {[namespace which -command "::7z"] eq ""} {
  source [file join [file dirname [info script]] 7z.tcl]
}

test regression--test-all {7z regression test for with previous versions compressed files, test with checksum} {
	variable 7Z_REGR_TEST_DIR
	variable 7Z_PWD
	set ret {}
	foreach p [lsort -dictionary [glob -directory $7Z_REGR_TEST_DIR *.*]] {
		set opt {}
		if {[string match xenc-* [file tail $p]]} { # encrypted with password
			set opt -p$7Z_PWD
		}
		set res [7z t -scrcSHA256 {*}$opt -- $p]
		set res [lrange [regexp -inline -expanded {
			\n(Path)\s*=\s*[^\n]*[\\/]([^\\/\n]+)
			\n(Type)\s*=\s*(\S*)
			(?:
				(?:\n(?!Method)[^\n]*){0,3}
			  (?:\n(Method)\s*=\s*(\S+))?
			)?
			(?:\n(?!Everything)[^\n]*){0,5}
			\nEverything\s+is\s+Ok
			(?:\n(?!Size)[^\n]*){0,5}
			\n(Size):\s*(\d+)
			(?:\n(?!SHA256)[^\n]*){0,5}
			\n(SHA256)\s+for\s+data:\s+(\S+)
			(?:\n(SHA256)\s+for\s+data\s+and\s+names:\s+(\S+))?
		} $res] 1 end]
		if {[lindex $res end] eq {}} {set res [lreplace $res end-1 end]}; # CRC with names is only for archives with multiple files
		lappend ret [file tail $p] $res
	}
	lappend ret OK
	join $ret \n
} [join {
	test-sol.7z
		{Path test-sol.7z Type 7z Method LZMA2:1536k Size 1100000 SHA256 975929a8472f0c34f13f187152b8d6aa021cbb39ef3c470eb892ab64424c8dbe-00000000 SHA256 bfe35415b7f77943de92e477da109c0ef7748bd41ff6a01a6215905860b694a0-00000000}
	test-sol.br.7z
		{Path test-sol.br.7z Type 7z Method BROTLI Size 1100000 SHA256 975929a8472f0c34f13f187152b8d6aa021cbb39ef3c470eb892ab64424c8dbe-00000000 SHA256 bfe35415b7f77943de92e477da109c0ef7748bd41ff6a01a6215905860b694a0-00000000}
	test-sol.zstd.7z
		{Path test-sol.zstd.7z Type 7z Method ZSTD Size 1100000 SHA256 975929a8472f0c34f13f187152b8d6aa021cbb39ef3c470eb892ab64424c8dbe-00000000 SHA256 bfe35415b7f77943de92e477da109c0ef7748bd41ff6a01a6215905860b694a0-00000000}
	test.txt.7z
		{Path test.txt.7z Type 7z Method LZMA2:20 Size 1000000 SHA256 aeda0f81c8376d1678af53927a08cf641cafab8b68aef509c881eb0be0bc3c97}
	test.txt.br
		{Path test.txt.br Type brotli {} {} Size 1000000 SHA256 aeda0f81c8376d1678af53927a08cf641cafab8b68aef509c881eb0be0bc3c97}
	test.txt.br.7z
		{Path test.txt.br.7z Type 7z Method BROTLI Size 1000000 SHA256 aeda0f81c8376d1678af53927a08cf641cafab8b68aef509c881eb0be0bc3c97}
	test.txt.zstd
		{Path test.txt.zstd Type zstd {} {} Size 1000000 SHA256 aeda0f81c8376d1678af53927a08cf641cafab8b68aef509c881eb0be0bc3c97}
	test.txt.zstd.7z
		{Path test.txt.zstd.7z Type 7z Method ZSTD Size 1000000 SHA256 aeda0f81c8376d1678af53927a08cf641cafab8b68aef509c881eb0be0bc3c97}
	xenc-pwd-sol.zstd.7z
		{Path xenc-pwd-sol.zstd.7z Type 7z {} {} Size 1100000 SHA256 975929a8472f0c34f13f187152b8d6aa021cbb39ef3c470eb892ab64424c8dbe-00000000 SHA256 bfe35415b7f77943de92e477da109c0ef7748bd41ff6a01a6215905860b694a0-00000000}
	OK
} \n]

test regression--list-tech-info {7z regression test for with previous versions compressed files, list with technical info} {
	variable 7Z_REGR_TEST_DIR
	variable 7Z_PWD
	set ret {}
	foreach p [lsort -dictionary [glob -directory $7Z_REGR_TEST_DIR *.*]] {
		set opt {}
		if {[string match xenc-* [file tail $p]]} { # encrypted with password
			set opt -p$7Z_PWD
		}
		lappend ret [file tail $p] [7z_get_info {*}$opt -- $p]
	}
	lappend ret OK
	join $ret \n
} [join {
	test-sol.7z
		{Path test-sol.7z Type 7z Solid + Files {{Path test.txt Size 1000000 Modified 1743632719 CRC C601982A Method LZMA2:1536k} {Path tesx.txt Size 100000 Modified 1743709207 CRC 7ECE9EBC Method LZMA2:1536k}}}
	test-sol.br.7z
		{Path test-sol.br.7z Type 7z Solid + Files {{Path test.txt Size 1000000 Modified 1743632719 CRC C601982A Method Brotli:v1.0,l9} {Path tesx.txt Size 100000 Modified 1743709207 CRC 7ECE9EBC Method Brotli:v1.0,l9}}}
	test-sol.zstd.7z
		{Path test-sol.zstd.7z Type 7z Solid + Files {{Path test.txt Size 1000000 Modified 1743632719 CRC C601982A Method ZSTD:v1.5,l17} {Path tesx.txt Size 100000 Modified 1743709207 CRC 7ECE9EBC Method ZSTD:v1.5,l17}}}
	test.txt.7z
		{Path test.txt.7z Type 7z Solid - Files {{Path test.txt Size 1000000 Modified 1743632719 CRC C601982A Method LZMA2:20}}}
	test.txt.br
		{Path test.txt.br Type brotli}
	test.txt.br.7z
		{Path test.txt.br.7z Type 7z Solid - Files {{Path test.txt Size 1000000 Modified 1743632719 CRC C601982A Method Brotli:v1.0,l9}}}
	test.txt.zstd
		{Path test.txt.zstd Type zstd}
	test.txt.zstd.7z
		{Path test.txt.zstd.7z Type 7z Solid - Files {{Path test.txt Size 1000000 Modified 1743632719 CRC C601982A Method ZSTD:v1.5,l17}}}
	xenc-pwd-sol.zstd.7z
		{Path xenc-pwd-sol.zstd.7z Type 7z Solid + Files {{Path test.txt Size 1000000 Modified 1743632719 CRC C601982A Method ZSTD:v1.5,l17} {Path tesx.txt Size 100000 Modified 1743709207 CRC 7ECE9EBC Method ZSTD:v1.5,l17}}}
	OK
} \n]

test regression--decompress {7z regression test for with previous versions compressed files, decompression} {
	variable 7Z_REGR_TEST_DIR
	variable 7Z_PWD
	set ret {}
	set regr_arc_data(txt) "TEST\n[string repeat { } 999990]\nEND."
	set regr_arc_data(sol) "$regr_arc_data(txt)1234\n[string repeat { } 99990]\n5678"
	foreach p [lsort -dictionary [glob -directory $7Z_REGR_TEST_DIR *.*]] {
		set opt {}
		if {[string match xenc-* [file tail $p]]} { # encrypted with password
			set opt -p$7Z_PWD
		}
		set res [7z e -so {*}$opt -- $p]
		if {![string match "*-sol*" [file tail $p]]} {
			set v [string equal [string trimright $res] $regr_arc_data(txt)]
		} else {
			set v [string equal [string trimright $res] $regr_arc_data(sol)]
		}
		lappend ret [file tail $p] $v
	}
	set ret
} [list {*}{
	test-sol.7z      1
	test-sol.br.7z   1
	test-sol.zstd.7z 1
	test.txt.7z      1
	test.txt.br      1
	test.txt.br.7z   1
	test.txt.zstd    1
	test.txt.zstd.7z 1
	xenc-pwd-sol.zstd.7z 1
}]

::tcltest::cleanupTests
